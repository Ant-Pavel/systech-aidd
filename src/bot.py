import logging

from aiogram import Bot, Dispatcher
from aiogram.enums import ChatAction
from aiogram.filters import Command
from aiogram.types import Message

logger = logging.getLogger(__name__)


class TelegramBot:
    def __init__(self, token, message_handler, conversation):
        self.bot = Bot(token=token)
        self.dp = Dispatcher()
        self.message_handler = message_handler
        self.conversation = conversation
        self._register_handlers()

    def _register_handlers(self):
        self.dp.message(Command("start"))(self.cmd_start)
        self.dp.message(Command("help"))(self.cmd_help)
        self.dp.message(Command("clear"))(self.cmd_clear)
        self.dp.message()(self.handle_text_message)

    async def cmd_start(self, message: Message):
        logger.info(f"Command /start from user {message.from_user.id}")
        welcome_text = (
            "üëã –ü—Ä–∏–≤–µ—Ç! –Ø AI –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç –Ω–∞ –±–∞–∑–µ LLM.\n\n"
            "–Ø –º–æ–≥—É –ø–æ–º–æ—á—å —Ç–µ–±–µ —Å:\n"
            "‚Ä¢ –û—Ç–≤–µ—Ç–∞–º–∏ –Ω–∞ –≤–æ–ø—Ä–æ—Å—ã\n"
            "‚Ä¢ –ì–µ–Ω–µ—Ä–∞—Ü–∏–µ–π –∏–¥–µ–π\n"
            "‚Ä¢ –û–±—ä—è—Å–Ω–µ–Ω–∏–µ–º —Å–ª–æ–∂–Ω—ã—Ö —Ç–µ–º\n"
            "‚Ä¢ –ü–æ–¥–¥–µ—Ä–∂–∫–æ–π –≤ –¥–∏–∞–ª–æ–≥–µ\n\n"
            "–ü—Ä–æ—Å—Ç–æ –Ω–∞–ø–∏—à–∏ –º–Ω–µ —á—Ç–æ-–Ω–∏–±—É–¥—å, –∏ —è –æ—Ç–≤–µ—á—É!\n\n"
            "–ò—Å–ø–æ–ª—å–∑—É–π /help —á—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å –¥–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã."
        )
        await message.answer(welcome_text)

    async def cmd_help(self, message: Message):
        logger.info(f"Command /help from user {message.from_user.id}")
        help_text = (
            "üìã –î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:\n\n"
            "/start - –ü–æ–∫–∞–∑–∞—Ç—å –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ\n"
            "/help - –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ\n"
            "/clear - –û—á–∏—Å—Ç–∏—Ç—å –∏—Å—Ç–æ—Ä–∏—é –¥–∏–∞–ª–æ–≥–∞\n\n"
            "üí¨ –ü—Ä–æ—Å—Ç–æ –æ—Ç–ø—Ä–∞–≤—å –º–Ω–µ —Ç–µ–∫—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ, –∏ —è –æ—Ç–≤–µ—á—É!\n"
            "–Ø –ø–æ–º–Ω—é –ø–æ—Å–ª–µ–¥–Ω–∏–µ 10 —Å–æ–æ–±—â–µ–Ω–∏–π –Ω–∞—à–µ–≥–æ —Ä–∞–∑–≥–æ–≤–æ—Ä–∞."
        )
        await message.answer(help_text)

    async def cmd_clear(self, message: Message):
        logger.info(f"Command /clear from user {message.from_user.id} in chat {message.chat.id}")
        self.conversation.clear_history(message.from_user.id, message.chat.id)
        await message.answer("‚úÖ –ò—Å—Ç–æ—Ä–∏—è –¥–∏–∞–ª–æ–≥–∞ –æ—á–∏—â–µ–Ω–∞. –ù–∞—á–Ω—ë–º —Å —á–∏—Å—Ç–æ–≥–æ –ª–∏—Å—Ç–∞!")

    async def handle_text_message(self, message: Message):
        try:
            # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä "–ø–µ—á–∞—Ç–∞–µ—Ç..."
            await self.bot.send_chat_action(chat_id=message.chat.id, action=ChatAction.TYPING)

            # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —á–µ—Ä–µ–∑ MessageHandler
            response = await self.message_handler.handle_message(
                user_id=message.from_user.id, chat_id=message.chat.id, text=message.text
            )

            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ—Ç–≤–µ—Ç
            await message.answer(response)

        except Exception as e:
            logger.error(f"Error handling message: {e}", exc_info=True)
            await message.answer("–ò–∑–≤–∏–Ω–∏—Ç–µ, –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.")

    async def start(self):
        logger.info("Bot started successfully")
        await self.dp.start_polling(self.bot)
